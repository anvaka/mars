{"version":3,"sources":["webpack:///./src/appState.js","webpack:///./src/token.js","webpack:///./src/elevation.js","webpack:///./src/lib/createHeightMapRenderer.js","webpack:///./src/main.js","webpack:///./src/getMarsStyle.js","webpack:///./src/lib/themes.js","webpack:///./src/lib/createColorRampCanvas.js"],"names":["appState","showLabels","autoHeightMap","currentState","lineDensity","lineWidth","smoothSteps","mapOpacity","heightScale","oceanLevel","aboutVisible","blank","error","zazzleLink","startOver","generatingPreview","settingsOpen","shouldDraw","showPrintMessage","renderProgress","hidePrintMessageForSession","width","window","innerWidth","height","innerHeight","backgroundColor","r","g","b","a","lineBackground","lineColor","MAPBOX_TOKEN","getRegionElevation","ne","sw","zoom","progress","arguments","length","undefined","startTileLat","lat2tile","lat","startTileLng","long2tile","lng","endTileLng","endTileLat","startXOffset","Math","round","floor","startYOffset","endXOffset","ceil","endYOffset","t","canvas","document","createElement","Error","work","apiURL","x","_tLong","startLng","tile2long","y","_tLat","url","replace","push","total","ctx","getContext","advanceProgress","promise_default","all","map","request","accept","img","Image","onload","onerror","crossOrigin","src","then","image","drawImage","catch","e","beginPath","fillStyle","fillRect","left","top","right","bottom","min","completed","message","l","pow","log","tan","PI","cos","createHeightMapRenderer","renderHandle","isCancelled","render","bounds","getBounds","getZoom","parse_float_default","getNorthEast","getSouthWest","regionInfo","resHeight","resWidth","parseFloat","style","opacity","lineStroke","getColor","lineFill","rowCount","scale","regionIterator","elevationCanvas","data","getImageData","getMinMaxHeight","minH","Number","POSITIVE_INFINITY","maxH","NEGATIVE_INFINITY","maxRow","minRow","index","R","G","B","decodeHeight","getIteratorSettings","includeRowIndex","stepSize","pos","start","step","stop","getHeight","row","col","h","createRegionIterator","_regionIterator$getMi","rowToKeep","heightRange","lastLine","iteratorSettings","lastRow","drawPolyLine","points","smoothRange","windowSize","result","max","i","leftOffset","from","to","count","sum","j","smoothHeight","getSmoothRange","moveTo","lineTo","closePath","fill","strokeStyle","stroke","clearRect","renderRows","now","performance","fY","elapsed","requestAnimationFrame","cancel","cancelAnimationFrame","color","themeNames","keys_default","themes","themeIndex","queryState","createState","theme","useSearch","themeName","get","findIndex","mergeStateFromQueryState","init","redraw","updateHeights","setNextTheme","setThemeName","setLabelsVisible","require","bind","__webpack_require__","oe","heightMapRenderer","lastScheduledPrintMessage","mapboxgl","accessToken","Map","trackResize","container","minZoom","version","name","center","bearing","pitch","sources","mars-tiles","type","tileSize","composite","sprite","glyphs","layers","id","paint","background-color","source","layout","raster-color-ramp","createColorRampArray","source-layer","filter","text-field","text-size","visibility","text-offset","text-font","text-halo-width","text-halo-color","text-color","created","modified","owner","draft","hash","addControl","NavigationControl","showCompass","on","hideHeights","schedulePrintMessage","dragRotate","disable","touchZoomRotate","disableRotation","clearTimeout","setTimeout","set","getLayer","colorRampTexture","setPaintProperty","updateCurrentLabelColors","triggerRepaint","colors","text","labelColor","halo","haloColor","getCurrentAppStateColors","getStyle","forEach","layerId","querySelector","heightMapCanvas","resize","display","__webpack_exports__","RED","colorRamp","size","value","GREEN","GRAY","HAZE","getColors","getColorRampSteps","toInt","intValue","hexNum","steps","reduce","prev","current","sliceWidth","fromColor","parseColor","toColor","hex","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_parse_int___default","substr","toString","currentTheme","EARTH"],"mappings":"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","file":"static/js/app.31d23db6bffc4dc14664.js","sourcesContent":["\nconst appState = {\n  showLabels: true,\n  autoHeightMap: true,\n  currentState: 'intro',\n  lineDensity: 28,\n  lineWidth: 1,\n  smoothSteps: 1,\n  mapOpacity: 100,\n  heightScale: 42,\n  oceanLevel: 0,\n  aboutVisible: false,\n  blank: false,\n  error: null,\n  zazzleLink: null,\n  startOver,\n  generatingPreview: false,\n  settingsOpen: false,\n  shouldDraw: false,\n  showPrintMessage: false,\n  renderProgress: null,\n  hidePrintMessageForSession: false,\n  width: window.innerWidth,\n  height: window.innerHeight,\n\n  backgroundColor: {\n    r: 255, g: 255, b: 255, a: 1\n  },\n  lineBackground: {\n    r: 255, g: 255, b: 255, a: 1\n  },\n  lineColor: {\n    r: 22, g: 22, b: 22, a: 0.85\n  },\n};\n\nfunction startOver() {\n  appState.zazzleLink = null;\n  appState.generatingPreview = false;\n  appState.currentState = 'intro';\n  appState.blank = false;\n}\n\nexport default appState;\n\n\n// WEBPACK FOOTER //\n// ./src/appState.js","export const MAPBOX_TOKEN = 'pk.eyJ1IjoiYW52YWthIiwiYSI6ImNrNWRqcDdnNTF4MHYzbXAzNDJzODludnYifQ.2WDAbuAzUuchNtCAcZitAw';\n\n\n// WEBPACK FOOTER //\n// ./src/token.js","import { MAPBOX_TOKEN } from \"./token\";\n\nexport function loadImage(url) {\n  return new Promise((accept, error) => {\n    const img = new Image();\n    img.onload = () => {\n      accept(img);\n    };\n    img.onerror = error;\n    img.crossOrigin = \"anonymous\";\n    img.src = url;\n  });\n}\n\nexport function getRegionElevation(ne, sw, zoom, progress, heightScale = 0) {\n  if (!progress) progress = {};\n\n  const renderHD = false;\n\n  const tileSize = renderHD ? 512 : 256;\n  const hdSuffix = renderHD ? '@2x' : '';\n\n  // these are precise coordinates of the visible area (they are not integers):\n  let startTileLat = lat2tile(ne.lat, zoom);\n  let startTileLng = long2tile(sw.lng, zoom);\n  let endTileLng = long2tile(ne.lng, zoom);\n  let endTileLat = lat2tile(sw.lat, zoom);\n\n  // Map can cover tiles partially. We need to know offsets, so that we align\n  // rendered height map with partially covered height tiles.\n  let startXOffset = Math.round((startTileLng - Math.floor(startTileLng)) * tileSize);\n  let startYOffset = Math.round((startTileLat - Math.floor(startTileLat)) * tileSize);\n  let endXOffset = Math.round((Math.ceil(endTileLng) - endTileLng) * tileSize);\n  let endYOffset = Math.round((Math.ceil(endTileLat) - endTileLat) * tileSize);\n\n\n  // Now that we know offsets, let's convert them to integer tile query:\n  startTileLat = Math.floor(startTileLat);\n  startTileLng = Math.floor(startTileLng);\n  endTileLat = Math.floor(endTileLat);\n  endTileLng = Math.floor(endTileLng);\n\n  if (startTileLng > endTileLng) {\n    let t = startTileLng;\n    startTileLng = endTileLng;\n    endTileLng = t;\n  }\n  if (startTileLat > endTileLat) {\n    let t = startTileLat;\n    startTileLat = endTileLat;\n    endTileLat = t;\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  const width = endTileLng - startTileLng + 1;\n  const height = endTileLat - startTileLat + 1;\n  if (width > 50 || height > 50) throw new Error('Too many tiles request. How did you do it?');\n  canvas.width = width * tileSize;\n  canvas.height = height * tileSize;\n  let work = [];\n\n  const apiURL = `https://api.mapbox.com/v4/anvaka.8ctdbgc9/zoom/tLong/tLat${hdSuffix}.pngraw?access_token=${MAPBOX_TOKEN}`;\n  for (let x = 0; x < width; x++) {\n    let _tLong = startTileLng + x;\n\n    let startLng = tile2long(_tLong, zoom);\n    if (startLng < -180) {\n      startLng = 360 + startLng;\n      _tLong = Math.floor(long2tile(startLng, zoom));\n    } else if (startLng >= 180) {\n      startLng = startLng - 360;\n      _tLong = Math.floor(long2tile(startLng, zoom));\n    }\n\n    for (let y = 0; y < height; y++) {\n      let _tLat = startTileLat + y;\n\n      const url = apiURL\n        .replace(\"zoom\", zoom)\n        .replace(\"tLat\", _tLat)\n        .replace(\"tLong\", _tLong);\n\n        work.push({\n          url: url,\n          x: x * tileSize,\n          y: y * tileSize\n        })\n    }\n  }\n\n  progress.total = work.length;\n\n  const ctx = canvas.getContext('2d');\n  advanceProgress();\n\n  return Promise.all(work.map(request => {\n    return loadImage(request.url)\n      .then(image => {\n        ctx.drawImage(image, request.x, request.y);\n        advanceProgress();\n      }).catch(e => {\n        ctx.beginPath();\n        ctx.fillStyle = '#0186a0'; // zero height\n        ctx.fillRect(request.x, request.y, tileSize, tileSize);\n        advanceProgress();\n      });\n  })).then(() => {\n    return {\n      canvas,\n      left: startXOffset,\n      top: startYOffset, \n      right: canvas.width - endXOffset,\n      bottom: Math.min(canvas.height, canvas.height - endYOffset)\n    };\n  });\n\n  function advanceProgress() {\n    if (progress.completed === undefined) {\n      progress.completed = -1;\n    }\n    progress.completed = Math.min(progress.total, progress.completed + 1);\n    progress.message = `Downloading tiles: ${progress.completed} of ${progress.total}...`\n  }\n}\n\nexport function long2tile(l, zoom) {\n  let result = ((l + 180) / 360) * Math.pow(2, zoom);\n  return result;\n}\n\nexport function lat2tile(l, zoom) {\n  return (\n    ((1 -\n      Math.log(\n        Math.tan((l * Math.PI) / 180) + 1 / Math.cos((l * Math.PI) / 180)\n      ) /\n        Math.PI) /\n      2) *\n    Math.pow(2, zoom)\n  );\n}\n\nexport function tile2long(x, zoom) {\n  return (x / Math.pow(2, zoom)) * 360 - 180;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/elevation.js","/**\n * This is the core component of the website which renders lines on the overlay\n * layer\n */\nimport { getRegionElevation } from '../elevation';\n\n\n/**\n * \n * @param {*} appState - @see ../appState.js\n * @param {*} map  - mapbox map instance\n * @param {*} canvas  - where the lines should be rendered\n */\nexport default function createHeightMapRenderer(appState, map, canvas) {\n  let renderHandle;\n  let isCancelled = false;\n  let ctx;\n\n  return {\n    /**\n     * Initiates async rendering\n     */\n    render,\n\n    /**\n     * When new render request is created, we have to cancel the current one:\n     */\n    cancel\n  }\n\n  function render() {\n    // let's figure out the area where lines need to be rendered:\n    const bounds = map.getBounds();\n    const zoom = Math.floor(map.getZoom(zoom));\n    appState.showPrintMessage = false;\n    appState.renderProgress = {\n      message: '',\n      isCancelled: false,\n      completed: false\n    };\n    const heightScale = Number.parseFloat(appState.heightScale);\n\n    // This will fetch all heightmap tiles\n    getRegionElevation(\n      bounds.getNorthEast(), bounds.getSouthWest(), zoom, appState.renderProgress, heightScale\n    ).then(drawRegion);\n\n    function drawRegion(regionInfo) {\n      if (isCancelled) return;\n\n      // let's set everything up to match our application state:\n      appState.renderProgress.message = 'Rendering...'\n\n      const oceanLevel = Number.parseFloat(appState.oceanLevel);\n      let resHeight = canvas.height;\n      let resWidth = canvas.width;\n      let smoothSteps = parseFloat(appState.smoothSteps);\n      canvas.style.opacity = Number.parseFloat(appState.mapOpacity)/100;\n\n      ctx = canvas.getContext('2d');\n      let lineStroke = getColor(appState.lineColor);\n      let lineFill = getColor(appState.lineBackground);\n\n      let rowCount = Math.round(resHeight * appState.lineDensity/100);\n      let scale = Number.parseFloat(appState.heightScale);\n\n      // since tiles can be partially overlapped, we use our own iterator\n      // over partially overlapped tiles (to not deal with offset math here)\n      const regionIterator = createRegionIterator(regionInfo, oceanLevel);\n      let {minH, maxH, maxRow, minRow} = regionIterator.getMinMaxHeight();\n\n      let rowToKeep = minH < 0 ? minRow : maxRow\n      // we want the scale be independent from the zoom level, use the distribution\n      // of heights as our scaler:\n      let heightRange = maxH - minH;\n\n      let lastLine = [];\n      let iteratorSettings = regionIterator.getIteratorSettings(rowCount, resHeight + heightScale, rowToKeep);\n      let lastRow = iteratorSettings.start;\n      let lineWidth = Number.parseFloat(appState.lineWidth) || 1;\n\n      clearScene();\n      renderRows();\n\n      // Public part is over. Below is is just implementation detail\n\n      /**\n       * This renders rows, and stops if allowed time quota is exceeded (making rendering\n       * async, so that we do not freeze the main thread)\n       */\n      function renderRows() {\n        let now = performance.now();\n\n        for (let row = lastRow; row < iteratorSettings.stop; row += iteratorSettings.step) {\n          drawPolyLine(lastLine);\n          lastLine = [];\n\n          for (let x = 0; x < resWidth; ++x) {\n            let height = regionIterator.getHeight(row/resHeight, x/resWidth);\n            let fY = row - Math.floor(scale * (height - minH) / heightRange);\n\n            if (height <= oceanLevel) {\n              drawPolyLine(lastLine);\n              lastLine = [];\n            } else {\n              lastLine.push(x, fY);\n            }\n          }\n\n          lastRow = row + iteratorSettings.step;\n          let elapsed = performance.now() - now;\n          if (elapsed > 2000) {\n            renderHandle = requestAnimationFrame(renderRows);\n            return;\n          }\n        }\n\n        drawPolyLine(lastLine);\n\n        appState.renderProgress.message = 'Done!'\n        appState.renderProgress = null;\n      }\n\n      /**\n       * Draws filled polyline.\n       */\n      function drawPolyLine(points) {\n        if (points.length < 3) return;\n\n        let smoothRange = getSmoothRange(points, smoothSteps);\n        points = smoothRange.points;\n\n        // If line's height is greater than 2 pixels, let's fill it:\n        if (smoothRange.max - smoothRange.min > 1) {\n          ctx.beginPath();\n          ctx.fillStyle = lineFill;\n          ctx.moveTo(points[0], points[1]);\n          for (let i = 2; i < points.length; i += 2) {\n            ctx.lineTo(points[i], points[i + 1]);\n          }\n          ctx.lineTo(points[points.length - 2], smoothRange.max);\n          ctx.lineTo(points[0], smoothRange.max);\n          ctx.closePath();\n          ctx.fill();\n        }\n\n        ctx.beginPath();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = lineStroke;\n        ctx.moveTo(points[0], points[1]);\n        for (let i = 2; i < points.length; i += 2) {\n          ctx.lineTo(points[i], points[i + 1]);\n        }\n        ctx.stroke();\n      }\n\n      function clearScene() {\n        ctx.clearRect(0, 0, resWidth, resHeight);\n        ctx.beginPath();\n        ctx.fillStyle = getColor(appState.backgroundColor);\n        ctx.fillRect(0, 0, resWidth, resHeight);\n      }\n    }\n  }\n\n  function cancel() {\n    cancelAnimationFrame(renderHandle)\n    isCancelled = true;\n    appState.renderProgress = null;\n    appState.showPrintMessage = false;\n  }\n\n  /**\n   * Simple smoothing function with moving averages, augmented with\n   * min/max calculation (don't want to spend more CPU cycles fo min/max)\n   */\n  function getSmoothRange(points, windowSize) {\n    let result = [];\n    let max = Number.NEGATIVE_INFINITY;\n    let min = Number.POSITIVE_INFINITY;\n    let length = points.length / 2;\n    for (let i = 0; i < length; i += 1) {\n      const leftOffset = i - windowSize;\n      const from = leftOffset >= 0 ? leftOffset : 0\n      const to = i + windowSize + 1;\n\n      let count = 0\n      let sum = 0\n      for (let j = from; j < to && j < length; j += 1) {\n        sum += points[2 * j + 1]\n        count += 1\n      }\n\n      let smoothHeight = sum / count;\n      result[2 * i] = points[2 * i];\n      result[2 * i + 1] = smoothHeight;\n\n      if (max < smoothHeight) max = smoothHeight;\n      if (min > smoothHeight) min = smoothHeight;\n    }\n\n    return {\n      points: result,\n      min,\n      max\n    };\n  }\n\n  /**\n   * Iterate over height map.\n   */\n  function createRegionIterator(regionInfo, oceanLevel) {\n    const elevationCanvas = regionInfo.canvas;\n    const {left, top, right, bottom} = regionInfo;\n    const width = elevationCanvas.width;\n    let data = elevationCanvas.getContext('2d')\n      .getImageData(0, 0, elevationCanvas.width, elevationCanvas.height)\n      .data;\n\n    return {\n      getMinMaxHeight,\n      getIteratorSettings,\n      getHeight\n    }\n\n    function getHeight(row, col) {\n      let x = Math.round(left + col * (right - left));\n      let y = Math.round(top + row * (bottom - top));\n\n      let index = (y * width + x) * 4;\n      let R = data[index + 0];\n      let G = data[index + 1];\n      let B = data[index + 2];\n      return decodeHeight(R, G, B);\n    }\n\n    function decodeHeight(R, G, B) {\n      // mars has 8 bit for color, so we don't care which component to take:\n      // if (Math.abs(R - G) > 1 || Math.abs(G - B) > 1) {\n      //   console.log('Height assumption is incorrect!')\n      // }\n      let zeroMarsPoint = 8200/(21229 + 8200) * 256;\n      let h = ((R - zeroMarsPoint) / 256) * (21229 + 8200); // scale to the range of Mars surface\n      if (h < oceanLevel) h = oceanLevel - 1;\n      return h;\n      // https://geology.com/articles/highest-point-on-mars.shtml\n    }\n\n    function getMinMaxHeight() {\n      let minH = Number.POSITIVE_INFINITY;\n      let maxH = Number.NEGATIVE_INFINITY;\n      let maxRow = -1;\n      let minRow = -1;\n      for (let x = left; x < right; ++x) {\n        for (let y = top; y < bottom; ++y) {\n          let index = (y * width + x) * 4;\n          let R = data[index + 0];\n          let G = data[index + 1];\n          let B = data[index + 2];\n          let height = decodeHeight(R, G, B)\n          if (height < minH) {\n            minH = height;\n            minRow = y;\n          }\n          if (height > maxH) {\n            maxH = height;\n            maxRow = y;\n          }\n        }\n      }\n\n      return {minH, maxH, maxRow, minRow};\n    }\n\n    function getIteratorSettings(rowCount, resHeight, includeRowIndex) {\n      let stepSize = Math.round(resHeight / rowCount);\n      let pos = includeRowIndex - stepSize;\n      while (pos - stepSize > 0) pos -= stepSize;\n\n      return {\n        start: pos,\n        step: stepSize,\n        stop: resHeight\n      }\n    }\n  }\n\n  function getColor(color) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/createHeightMapRenderer.js","/**\n * This is the website startup point.\n */\nimport appState from \"./appState\";\nimport themes from './lib/themes';\nimport mapboxgl from \"mapbox-gl\";\nimport createHeightMapRenderer from \"./lib/createHeightMapRenderer\";\nimport { MAPBOX_TOKEN } from \"./token\";\nimport { getMarsStyle } from \"./getMarsStyle\";\nimport {createColorRampArray} from './lib/createColorRampCanvas';\nimport createState from 'query-state';\n\nlet themeNames = Object.keys(themes);\nlet themeIndex = 0;\nlet queryState = createState({\n  theme: 'RED'\n}, {\n  useSearch: true\n})\n\nmergeStateFromQueryState();\naugmentAppStateWithMethods();\n\n// Load vue asyncronously\nrequire.ensure(\"@/vueApp.js\", () => {\n  require(\"@/vueApp.js\");\n});\n\n// Hold a reference to mapboxgl instance.\nlet map;\n\nlet heightMapRenderer, lastScheduledPrintMessage;\n\n\nfunction mergeStateFromQueryState() {\n  const themeName = queryState.get('theme');\n  themeIndex = themeNames.findIndex(x => x === themeName);\n  if (themeIndex < 0) themeIndex = 0;\n  appState.theme = themeNames[themeIndex];\n}\n\nfunction augmentAppStateWithMethods() {\n  // Let the vue know what to call to start the app.\n  appState.init = init;\n  appState.redraw = updateHeights;\n  appState.setNextTheme = setNextTheme;\n  appState.setThemeName = setThemeName;\n  appState.setLabelsVisible = setLabelsVisible;\n}\n\nfunction init() {\n  mapboxgl.accessToken = MAPBOX_TOKEN;\n\n  window.map = map = new mapboxgl.Map({\n    trackResize: true,\n    container: \"map\",\n    minZoom: 1,\n    style: getMarsStyle(),\n    center: [-92.880, 18.79],\n    zoom: 2.64,\n    hash: true\n  });\n\n  map.addControl(new mapboxgl.NavigationControl({ showCompass: false }), \"top-right\");\n\n  map.on(\"zoomstart\", hideHeights);\n  map.on(\"zoomend\", updateHeights);\n  map.on(\"dragstart\", hideHeights);\n  map.on(\"dragend\", updateHeights);\n  map.on(\"load\", function() {\n    setLabelsVisible(appState.showLabels);\n    schedulePrintMessage();\n    // I was considering using native layers, to fetch the coordinates,\n    // but my understanding of mapbox is not deep enough to do it yet.\n\n    // map.showTileBoundaries = true;\n    // map.addSource(\"dem\", {\n    //     type: \"raster-dem\",\n    //     \"url\": \"mapbox://anvaka.8ctdbgc9\",\n    //     \"tileSize\": 256,\n    //     encoding: 'terrarium'\n    // });\n    // map.addLayer(\n    //   {\n    //     id: \"hillshading\",\n    //     type: \"hillshade\",\n    //     source: \"dem\",\n\n    //   }\n    // );\n    // map.addLayer(\n    //   {\n    //     visibility: \"none\",\n    //     id: \"hillshading\",\n    //     type: \"hillshade\",\n    //     source: \"dem\"\n    //   },\n    //   \"water-shadow\"\n    // );\n\n    updateHeights();\n  });\n\n  map.dragRotate.disable();\n  map.touchZoomRotate.disableRotation();\n}\n\nfunction schedulePrintMessage() {\n  if (lastScheduledPrintMessage) {\n    clearTimeout(lastScheduledPrintMessage);\n  }\n  if (appState.showPrintMessage) return;\n\n  lastScheduledPrintMessage = setTimeout(function() {\n    appState.showPrintMessage = true;\n  }, 10000)\n}\n\nfunction setNextTheme() {\n  themeIndex += 1;\n  themeIndex = themeIndex % themeNames.length;\n  setThemeName(themeNames[themeIndex]);\n}\n\nfunction setThemeName(name) {\n  themeIndex = themeNames.findIndex(x => x === name);\n  if (themeIndex < 0) return;\n\n  appState.theme = name;\n  queryState.set('theme', appState.theme);\n  if (map) {\n    let layer = map.getLayer('mars200m')\n    layer.colorRampTexture = null;\n    map.setPaintProperty('mars200m', 'raster-color-ramp', createColorRampArray(appState.theme));\n    updateCurrentLabelColors();\n\n\n    map.triggerRepaint();\n  }\n}\n\nfunction updateCurrentLabelColors() {\n  schedulePrintMessage();\n  let colors = getCurrentAppStateColors();\n  getAllTextLayers().forEach(layerId => {\n    map.setPaintProperty(layerId, 'text-color', colors.text);\n    map.setPaintProperty(layerId, 'text-halo-color', colors.halo);\n  });\n}\n\nfunction setLabelsVisible() {\n  schedulePrintMessage();\n  updateCurrentLabelColors();\n}\n\nfunction getCurrentAppStateColors() {\n  if (appState.showLabels) {\n    let theme = themes[appState.theme];\n    return {\n      text: theme.labelColor,\n      halo: theme.haloColor\n    }\n  }\n  return {\n    text: 'transparent',\n    halo: 'transparent'\n  }\n}\n\nfunction getAllTextLayers() {\n  return map.getStyle()\n    .layers\n    .filter(x => x.type === 'symbol' && x.source === 'composite')\n    .map(x => x.id);\n\n}\n\nfunction hideHeights() {\n  clearTimeout(lastScheduledPrintMessage);\n\n  appState.zazzleLink = null;\n  let canvas = document.querySelector(\".height-map\");\n  if (canvas) canvas.style.opacity = 0.02;\n}\n\nfunction updateHeights() {\n  schedulePrintMessage();\n  if (!map) return;\n\n  let heightMapCanvas = document.querySelector(\".height-map\");\n  if (!heightMapCanvas) return;\n\n  map.resize();\n  if (!appState.shouldDraw) {\n    heightMapCanvas.style.display = \"none\";\n    return;\n  } else {\n    heightMapCanvas.style.display = \"\";\n  }\n\n  if (heightMapRenderer) {\n    heightMapRenderer.cancel();\n  }\n\n  heightMapRenderer = createHeightMapRenderer(appState, map, heightMapCanvas);\n  heightMapRenderer.render();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import { createColorRampArray } from \"./lib/createColorRampCanvas\";\nimport appState from \"./appState\";\n\nexport function getMarsStyle() {\n  return {\n    version: 8,\n    name: \"mars\",\n    center: [0, 0],\n    zoom: 2.64,\n    bearing: 0,\n    pitch: 0,\n    sources: getMarsSources(),\n    sprite:\n      \"mapbox://sprites/anvaka/ck49e9ayb0djv1cmmjkpm8u16/ck2u8j60r58fu0sgyxrigm3cu\",\n    glyphs: \"mapbox://fonts/anvaka/{fontstack}/{range}.pbf\",\n    layers: [\n      {\n        id: \"background\",\n        type: \"background\",\n        paint: { \"background-color\": \"hsla(0, 0%, 0%, 0)\" }\n      },\n      {\n        id: \"mars200m\",\n        type: \"raster\",\n        source: \"mars-tiles\",\n        layout: {},\n        paint: {\n          \"raster-color-ramp\": createColorRampArray(appState.theme)\n        }\n      },\n      {\n        \"id\": \"crater-label\",\n        \"type\": \"symbol\",\n        \"source\": \"composite\",\n        \"source-layer\": \"mars_labels-bizwyb\",\n        \"filter\": [\n            \"match\",\n            [\"get\", \"type\"],\n            [\"Crater, craters\"],\n            true,\n            false\n        ],\n        \"layout\": {\n            \"text-field\": [\"to-string\", [\"get\", \"clean_name\"]],\n            \"text-size\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"zoom\"],\n                3,\n                12,\n                12,\n                [\"case\", [\">\", [\"get\", \"diameter\"], 50], 32, 26]\n            ],\n            \"visibility\": \"none\"\n        },\n        \"paint\": {}\n    },\n    {\n        \"id\": \"mountains\",\n        \"type\": \"symbol\",\n        \"source\": \"composite\",\n        \"source-layer\": \"mars_labels-bizwyb\",\n        \"filter\": [\"match\", [\"get\", \"type\"], [\"Mons, montes\"], true, false],\n        \"layout\": {\n            \"text-field\": [\"to-string\", [\"get\", \"clean_name\"]],\n            \"text-size\": [\n                \"step\",\n                [\"zoom\"],\n                0,\n                2,\n                [\n                    \"max\",\n                    [\n                        \"+\",\n                        [\n                            \"/\",\n                            [\"*\", 16, [\"-\", [\"get\", \"diameter\"], 14]],\n                            2044\n                        ],\n                        4\n                    ],\n                    14\n                ],\n                2.5,\n                14\n            ],\n            \"text-offset\": [0, -1],\n            \"text-font\": [\"Roboto Regular\", \"Arial Unicode MS Regular\"]\n        },\n        \"paint\": {\n            \"text-halo-width\": 0.1,\n            \"text-halo-color\": \"hsla(0, 0%, 100%, 0.65)\"\n        }\n    },\n    {\n        \"id\": \"terra-labels\",\n        \"type\": \"symbol\",\n        \"source\": \"composite\",\n        \"source-layer\": \"mars_labels-bizwyb\",\n        \"filter\": [\n            \"match\",\n            [\"get\", \"type\"],\n            [\"Terra, terrae\"],\n            true,\n            false\n        ],\n        \"layout\": {\n            \"text-field\": [\"to-string\", [\"get\", \"clean_name\"]],\n            \"text-size\": [\"step\", [\"zoom\"], 14, 1, 14, 2, 0],\n            \"text-offset\": [0, 0],\n            \"text-font\": [\"Roboto Medium\", \"Arial Unicode MS Regular\"]\n        },\n        \"paint\": {\n            \"text-halo-color\": \"hsla(189, 0%, 100%, 0.71)\",\n            \"text-color\": \"hsl(0, 0%, 0%)\",\n            \"text-halo-width\": 0.2\n        }\n    },\n    {\n        \"id\": \"platia-labels\",\n        \"type\": \"symbol\",\n        \"source\": \"composite\",\n        \"source-layer\": \"mars_labels-bizwyb\",\n        \"filter\": [\n            \"match\",\n            [\"get\", \"type\"],\n            [\"Planitia, planitiae\"],\n            true,\n            false\n        ],\n        \"layout\": {\n            \"text-field\": [\"to-string\", [\"get\", \"clean_name\"]],\n            \"text-size\": [\"step\", [\"zoom\"], 14, 1, 14, 2, 0],\n            \"text-offset\": [0, 0],\n            \"text-font\": [\"Roboto Medium\", \"Arial Unicode MS Regular\"]\n        },\n        \"paint\": {\n            \"text-halo-color\": \"hsla(189, 0%, 100%, 0.71)\",\n            \"text-color\": \"hsl(0, 0%, 0%)\",\n            \"text-halo-width\": 0.2\n        }\n    }\n    ],\n    created: \"2019-12-17T04:55:56.118Z\",\n    id: \"ck49e9ayb0djv1cmmjkpm8u16\",\n    modified: \"2019-12-21T19:43:42.202Z\",\n    owner: \"anvaka\",\n    visibility: \"private\",\n    draft: false\n  };\n}\n\nfunction getMarsSources() {\n  return {\n    \"mars-tiles\": {\n        \"url\": \"mapbox://anvaka.8ctdbgc9\",\n        \"type\": \"raster\",\n        \"tileSize\": 256\n    },\n    \"composite\": {\"url\": \"mapbox://anvaka.40t5yrsw\", \"type\": \"vector\"}\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/getMarsStyle.js","export default {\n  RED: {\n    labelColor: \"#ffffff\",\n    haloColor: \"#000000\",\n    colorRamp: [\n      {\n        size: 0.5,\n        value: \"#000000\"\n      },\n      {\n        size: 1,\n        value: \"#441807\"\n      },\n      {\n        size: 1,\n        value: \"#BF451C\"\n      },\n      {\n        size: 1,\n        value: \"#E57D27\"\n      },\n      {\n        size: 1,\n        value: \"#FBA529\"\n      },\n      {\n        size: 0,\n        value: \"#FFFFFFF\"\n      }\n    ]\n  },\n  GREEN: {\n    labelColor: \"#000000\",\n    haloColor: \"#FFFFFF\",\n    colorRamp: [\n      {\n        size: 1,\n        value: \"#000000\"\n      },\n      {\n        size: 1,\n        value: \"#16005E\"\n      },\n      {\n        size: 1,\n        value: \"#1B1170\"\n      },\n      {\n        size: 1,\n        value: \"#004489\"\n      },\n      {\n        size: 1,\n        value: \"#1B7AA0\"\n      },\n      {\n        size: 1,\n        value: \"#28A8AF\"\n      },\n      {\n        size: 1,\n        value: \"#00C1B6\"\n      },\n      {\n        size: 1,\n        value: \"#00D7BC\"\n      },\n      {\n        size: 1,\n        value: \"#49EBCD\"\n      },\n      {\n        size: 1,\n        value: \"#41DFBB\"\n      },\n      {\n        size: 1,\n        value: \"#00B689\"\n      },\n      {\n        size: 1,\n        value: \"#00A666\"\n      },\n      {\n        size: 1,\n        value: \"#009967\"\n      },\n      {\n        size: 1,\n        value: \"#277F57\"\n      },\n      {\n        size: 1,\n        value: \"#005B2C\"\n      },\n      {\n        size: 1,\n        value: \"#004700\"\n      },\n      {\n        size: 1,\n        value: \"#004F00\"\n      },\n      {\n        size: 1,\n        value: \"#006400\"\n      },\n      {\n        size: 1,\n        value: \"#3E6F27\"\n      },\n      {\n        size: 1,\n        value: \"#527724\"\n      },\n      {\n        size: 1,\n        value: \"#64842B\"\n      },\n      {\n        size: 1,\n        value: \"#609100\"\n      },\n      {\n        size: 1,\n        value: \"#84A900\"\n      },\n      {\n        size: 1,\n        value: \"#8BB500\"\n      },\n      {\n        size: 1,\n        value: \"#A5CA00\"\n      },\n      {\n        size: 1,\n        value: \"#C2D558\"\n      },\n      {\n        size: 1,\n        value: \"#DBE974\"\n      },\n      {\n        size: 1,\n        value: \"#F7F57B\"\n      },\n      {\n        size: 1,\n        value: \"#FFF4A3\"\n      },\n      {\n        size: 1,\n        value: \"#FFE391\"\n      },\n      {\n        size: 1,\n        value: \"#FFCA78\"\n      },\n      {\n        size: 1,\n        value: \"#F8B966\"\n      },\n      {\n        size: 1,\n        value: \"#E89C40\"\n      },\n      {\n        size: 1,\n        value: \"#D9831F\"\n      },\n      {\n        size: 1,\n        value: \"#BF6E1C\"\n      },\n      {\n        size: 1,\n        value: \"#AF6222\"\n      },\n      {\n        size: 1,\n        value: \"#824F2A\"\n      },\n      {\n        size: 1,\n        value: \"#684024\"\n      },\n      {\n        size: 1,\n        value: \"#4F2B07\"\n      },\n      {\n        size: 0,\n        value: \"#4F2B07\"\n      }\n    ]\n  },\n  GRAY: {\n    labelColor: \"#ffffff\",\n    haloColor: \"#000000\",\n    colorRamp: [\n      {\n        size: 1,\n        value: \"#00000000\"\n      },\n      {\n        value: \"#FFFFFF00\"\n      }\n    ]\n  },\n  HAZE: {\n    labelColor: \"#FFFFFF\",\n    haloColor: \"#000000\",\n    colorRamp: [\n      {\n        size: 1,\n        value: \"#000000\"\n      },\n      {\n        size: 1,\n        value: \"#495086\"\n      },\n      {\n        size: 1,\n        value: \"#BBC6E9\"\n      },\n      {\n        size: 1,\n        value: \"#CD8684\"\n      },\n      {\n        size: 1,\n        value: \"#EDDDC3\"\n      },\n      {\n        size: 1,\n        value: \"#FDFCE8\"\n      },\n      {\n        size: 0,\n        value: \"#FEFEFE\"\n      },\n    ]\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/themes.js","import themes from './themes';\n\nexport function createColorRampCanvas(theme) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  const width = 256;\n  const height = 1;\n  context.width = canvas.width = width;\n  context.height = canvas.height = height;\n\n  let colors = getColors(width, getColorRampSteps(theme))\n  drawColors(colors, context, height);\n  return canvas;\n}\n\nexport function createColorRampArray(theme) {\n  return getColors(256, getColorRampSteps(theme)).map(toInt);\n}\n\nfunction drawColors(colors, ctx, height) {\n  colors.forEach((color, x) => {\n    ctx.fillStyle = toHexColor(color);\n    ctx.fillRect(x, 0, 1, height);\n  })\n}\n\nfunction getColors(width, steps) {\n  let sum = steps.reduce((prev, current) => {\n    return prev + (current.size || 0)\n  }, 0);\n  let colors = [];\n\n  for (let i = 1; i < steps.length; ++i) {\n    let sliceWidth = Math.ceil(width * steps[i - 1].size  / sum);\n    let fromColor = parseColor(steps[i - 1].value);\n    let toColor = parseColor(steps[i].value);\n    for (let x = 0; x < sliceWidth; ++x) {\n      let color = lerp(fromColor, toColor, x/sliceWidth);\n      colors.push(color);\n    }\n  }\n\n  return colors;\n  \n  function parseColor(hex) {\n    return {\n      r: Number.parseInt(hex.substr(1, 2), 16),\n      g: Number.parseInt(hex.substr(3, 2), 16),\n      b: Number.parseInt(hex.substr(5, 2), 16),    \n    } \n  }\n  \n  function lerp(from, to, scale) {\n    return {\n      r: from.r * (1 - scale) + to.r * scale,\n      g: from.g * (1 - scale) + to.g * scale,\n      b: from.b * (1 - scale) + to.b * scale,\n      a: 255\n    }\n  }\n}\n\nfunction toHexColor(rgb) {\n  return '#' + hexNum(rgb.r) + hexNum(rgb.g) + hexNum(rgb.b);\n}\n\nfunction toInt(color) {\n  let a = color.a === undefined ? 0xFF : color.a;\n  return (color.r << 24) | (color.g << 16) |  (color.b << 8) | a;\n}\n\nexport function toHexColorFromInt(intValue) {\n  return '#' + hexNum((intValue >> 24) & 0xFF) + \n    hexNum((intValue >> 16) & 0xFF) +\n    hexNum((intValue >> 8) & 0xFF);\n    // hexNum((intValue >> 0) & 0xFF)\n}\n\nfunction hexNum(x) {\n  x = Math.round(x);\n  let prefix = x < 16 ? '0' : '';\n  return prefix + x.toString(16);\n}\n\nfunction getColorRampSteps(currentTheme) {\n    return (themes[currentTheme] || themes.EARTH).colorRamp;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/createColorRampCanvas.js"],"sourceRoot":""}